#!/usr/bin/env python3

import json
import locale
import sys
import reports
import emails


def load_data(filename):
  """Loads the contents of filename as a JSON file."""
  with open(filename) as json_file:
    data = json.load(json_file)
  return data


def format_car(car):
  """Given a car dictionary, returns a nicely formatted name."""
  return "{} {} ({})".format(
      car["car_make"], car["car_model"], car["car_year"])


def process_data(data):
  """Analyzes the data, looking for maximums.

  Returns a list of lines that summarize the information.
  """
  locale.setlocale(locale.LC_ALL, 'en_US.UTF8')
  max_revenue = {"revenue": 0}
  max_sales = {"total_sales": 0}
  year_sales = {}
  for item in data:
    # Calculate the revenue generated by this model (price * total_sales)
    # We need to convert the price from "$1234.56" to 1234.56
    item_price = locale.atof(item["price"].strip("$"))
    item_revenue = item["total_sales"] * item_price
    if item_revenue > max_revenue["revenue"]:
      item["revenue"] = item_revenue
      max_revenue = item
    
    # TODO: also handle max sales
    if item['total_sales'] > max_sales['total_sales']:
        max_sales = item
    # TODO: also handle most popular car_year
    if item['car']['car_year'] not in year_sales:
        year_sales[item['car']['car_year']] = item['total_sales']
    else:
        year_sales[item['car']['car_year']] = year_sales[item['car']['car_year']] + item['total_sales']

    print(year_sales)

    popular_year = {'sales' : 0}

    for key, value in year_sales.items():
        if value > popular_year['sales']:
            popular_year['year'] = key
            popular_year['sales'] = value

    print(popular_year)

  summary = [
    "The {} generated the most revenue: ${}".format(
        format_car(max_revenue["car"]), max_revenue["revenue"]),
    "The {car_model} had the most sales: {total_sales}".format(
        car_model=format_car(max_sales['car']), total_sales=max_sales['total_sales']),
    "The most popular year was {year} with {total_sales} sales.".format(year=popular_year['year'],total_sales=popular_year['sales'])        
  ]

  return summary


def cars_dict_to_table(car_data):
  """Turns the data in car_data into a list of lists."""
  table_data = [["ID", "Car", "Price", "Total Sales"]]
  for item in car_data:
    table_data.append([item["id"], format_car(item["car"]), item["price"], item["total_sales"]])
  return table_data


def cars_dict_to_table(car_data):
  """Turns the data in car_data into a list of lists."""
  table_data = [["ID", "Car", "Price", "Total Sales"]]
  for item in car_data:
    table_data.append([item["id"], format_car(item["car"]), item["price"], item["total_sales"]])
  return table_data


def main(argv):
  """Process the JSON data and generate a full report out of it."""
  data = load_data("/home/student-02-c64b8fadb7ac/car_sales.json")
  summary = process_data(data)
  print(summary)
  # TODO: turn this into a PDF report
  pdf_body = "<br/>".join(summary)
  cars_data = cars_dict_to_table(data)
  reports.generate('/tmp/cars.pdf', 'Sales summary for last month', pdf_body, cars_data)

  # TODO: send the PDF report as an email attachment
  sender = 'automation@example.com'
  receiver = '<user>@example.com'
  subject = 'Sales summary for last month'
  body = "\n".join(summary)

  message = emails.generate(sender, receiver, subject, body, '/tmp/cars.pdf')
  print(message)
  #emails.send(message)



if __name__ == "__main__":
  main(sys.argv)
